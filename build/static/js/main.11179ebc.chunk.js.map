{"version":3,"sources":["services/auth.js","routes.js","store/reducers/UserReducer.js","store/reducers/HomeNavbarReducer.js","store/reducers/index.js","store/index.js","App.js","index.js"],"names":["TOKEN_KEY","isAuthenticated","localStorage","getItem","getToken","login","token","setItem","logout","removeItem","Home","lazy","Login","Register","Chat","CountConfig","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","Routes","fallback","exact","path","INIT_STATE","userReducer","action","type","Object","assign","payload","HomeNavbarReducer","rootReducers","combineReducers","store","createStore","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"iGAAA,wIAAO,IAAMA,EAAY,YACZC,EAAkB,kBAA0C,OAApCC,aAAaC,QAAQH,IAC7CI,EAAW,kBAAMF,aAAaC,QAAQH,IACtCK,EAAQ,SAAAC,GACnBJ,aAAaK,QAAQP,EAAWM,IAErBE,EAAS,WACpBN,aAAaO,WAAWT,K,+ICGpBU,EAAOC,gBAAK,kBAAM,4EAClBC,EAAQD,gBAAK,kBAAM,+DACnBE,EAAWF,gBAAK,kBAAM,sEACtBG,EAAOH,gBAAK,kBAAM,qEAClBI,EAAcJ,gBAAK,kBAAM,qEAOzBK,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXpB,cACE,cAACgB,EAAD,eAAeI,IAEf,cAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEC,KAAMJ,EAAMK,kBAuBpDC,EAjBA,kBACX,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASZ,UAAWN,IACtC,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,YAAYZ,UAAWL,IAEzC,cAAC,EAAD,CAAcgB,OAAK,EAACC,KAAK,IAAIZ,UAAWR,IACxC,cAAC,EAAD,CAAcmB,OAAK,EAACC,KAAK,gBAAgBZ,UAAWJ,IACpD,cAAC,EAAD,CAAce,OAAK,EAACC,KAAK,UAAUZ,UAAWH,Y,eC5CpDgB,EAAa,GASJC,MAPf,WAAiD,IAA5BR,EAA2B,uDAAnBO,EAAYE,EAAO,uCAC5C,MAAmB,eAAhBA,EAAOC,KACCC,OAAOC,OAAOZ,EAAOS,EAAOI,SAEhCb,GCNLO,EAAa,SAgCJO,MA9Bf,WAAuD,IAA5Bd,EAA2B,uDAAnBO,EAAYE,EAAO,uCAClD,GAAmB,eAAhBA,EAAOC,KACN,OAAQD,EAAOI,SACX,IAAK,SACG,MAAO,SAGf,IAAK,UACG,MAAO,UAGf,IAAK,MACG,MAAO,MAGf,IAAK,UACG,MAAO,UAGf,IAAK,aACG,MAAO,aAOvB,OAAOb,GCpBIe,EALMC,YAAgB,CACjCR,cACAM,sBCCWG,EAJDC,YACVH,GCWWI,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,S,MCJRI,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11179ebc.chunk.js","sourcesContent":["export const TOKEN_KEY = \"chat-funy\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};","//dependencies\nimport React, {Suspense, lazy} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\n//external files\n\n//-auth\nimport {isAuthenticated} from './services/auth';\n\n//-pages\nconst Home = lazy(() => import('./pages/Home/Home'))\nconst Login = lazy(() => import('./pages/Login/Login'))\nconst Register = lazy(() => import('./pages/Register/Register'))\nconst Chat = lazy(() => import('./pages/Chat/Chat'))\nconst CountConfig = lazy(() => import('./pages/CountConfig/CountConfig'))\n\n\n\n\n//component\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n        )\n      }\n    />\n);\n\nconst Routes = () => (\n    <Router>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n\n            <Route exact path=\"/login\" component={Login} />           \n            <Route exact path=\"/register\" component={Register} />\n\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/chat/:friend\" component={Chat} />\n            <PrivateRoute exact path=\"/config\" component={CountConfig} />   \n\n          </Switch>\n        </Suspense>\n    </Router>\n)\n\nexport default Routes","const INIT_STATE = {}\n\nfunction userReducer(state = INIT_STATE, action){\n    if(action.type === 'user_datas'){\n        return Object.assign(state, action.payload)   \n    } \n    return state\n}\n\nexport default userReducer","const INIT_STATE = \"Online\";\n\nfunction HomeNavbarReducer(state = INIT_STATE, action){\n    if(action.type === 'HomeNavbar'){\n        switch (action.payload) {\n            case 'Online':\n                    return 'Online'\n                break;\n\n            case 'Pending':\n                    return 'Pending'\n                break;\n\n            case 'All':\n                    return 'All'\n                break;\n\n            case 'Blocked':\n                    return 'Blocked'\n                break;\n\n            case 'Add Friend':\n                    return 'Add Friend'\n                break;\n            default:\n                break;\n        }\n    }\n\n    return state\n}\n\nexport default HomeNavbarReducer","import { combineReducers } from 'redux'\nimport userReducer from './UserReducer';\nimport HomeNavbarReducer from './HomeNavbarReducer';\n\nconst rootReducers = combineReducers({\n    userReducer,\n    HomeNavbarReducer\n})\n\nexport default rootReducers","import {createStore} from 'redux';\nimport rootReducers from './reducers';\n\nconst store = createStore(\n    rootReducers,\n)\n\nexport default store","import Routes from './routes';\nimport {Provider} from 'react-redux';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}